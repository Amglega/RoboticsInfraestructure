<?xml version='1.0'?>
<sdf version="1.4">
  <model name="f1_renault_multicamera_multilaser">
    <pose>0 0 0 0 0 0</pose>
    <static>false</static>
    <link name="f1">
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>10</mass>
        <inertia>
          <ixx>1</ixx>
          <ixy>0.0</ixy>
          <iyy>1</iyy>
          <ixz>0.0</ixz>
          <iyz>0.0</iyz>
          <izz>1.0</izz>
        </inertia>
      </inertial>
      <collision name="collision">
        <geometry>
          <mesh>
            <uri>model://f1_renault_multicamera_multilaser/Renault/Car.obj</uri>
            <scale>0.2 0.2 0.2</scale>
          </mesh>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://f1_renault_multicamera_multilaser/Renault/Car.obj</uri>
            <scale>0.2 0.2 0.2</scale>
          </mesh>
        </geometry>
      </visual>


      <!--F1ROS/cameraL (old cameraF)-->
      <visual name='camera_front'>
        <pose>0.250 0.080000 0.3000000 0.000000 -0.000000 0.0000000</pose>
        <geometry>
          <sphere>
            <radius>.005</radius>
          </sphere>
        </geometry>
      </visual>

      <sensor name='cam_front' type='camera'>
        <pose>0.250 0.080000 0.3000000 0.000000 -0.000000 0.0000000</pose>
        <update_rate>30.000000</update_rate>
        <camera name='c_front'>
          <horizontal_fov>1.57</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.100000</near>
            <far>30.000000</far>
          </clip>
        </camera>
        <plugin name="camera_controller_front" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>F1ROS/cameraL</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_front</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </link>


    <!--F1ROS/cameraL -->
    <link name='camera_left_front'>
      <pose>0.200 0.080000 0.3000000 0.000000 -0.000000 0.0000000</pose>
      <inertial>
        <mass>2</mass>
        <inertia>
          <ixx>1.000000</ixx>
          <ixy>0.000000</ixy>
          <ixz>0.000000</ixz>
          <iyy>1.000000</iyy>
          <iyz>0.000000</iyz>
          <izz>1.000000</izz>
        </inertia>
      </inertial>
      <sensor name='cam_left_front' type='camera'>
        <pose>0.200 0.000 0.2000000 0.000000 -0.000000 0.0000000</pose>
        <update_rate>30.000000</update_rate>
        <camera name='c_lfront'>
          <horizontal_fov>1.520</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.100000</near>
            <far>30.000000</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller_left_front" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>F1ROS/cameraL_2</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_left_front</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
      <visual name='visual'>
        <geometry>
          <sphere>
            <radius>.005</radius>
          </sphere>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <box>
            <size>0.100000 0.100000 0.100000</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.000000</mu>
              <mu2>100000.000000</mu2>
              <slip1>0.000000</slip1>
              <slip2>0.000000</slip2>
            </ode>
          </friction>
        </surface>
        <max_contacts>10</max_contacts>
      </collision>
      <velocity_decay>
        <linear>0.000000</linear>
        <angular>0.000000</angular>
      </velocity_decay>
      <self_collide>0</self_collide>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
    </link>

    <!-- just for coding -->
    <!-- Camera Front half -->
    <link name='camera_front_half'>
      <pose>0.200 0.00000 0.3000000 0.000000 -0.000000 0.0000000</pose>
      <inertial>
        <mass>2</mass>
        <inertia>
          <ixx>1.000000</ixx>
          <ixy>0.000000</ixy>
          <ixz>0.000000</ixz>
          <iyy>1.000000</iyy>
          <iyz>0.000000</iyz>
          <izz>1.000000</izz>
        </inertia>
      </inertial>
      <sensor name='cam_front_half' type='camera'>
        <pose>0.200 0.00000 0.3000000 0.000000 -0.000000 0.0000000</pose>
        <camera name='c_fronthalf'>
          <horizontal_fov>1.8000</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.100000</near>
            <far>50.000000</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller_front_half" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>F1ROS/cameraF_H</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_front_half</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <!--    <visualize>true</visualize>
        <enable_metrics>true</enable_metrics> -->
      </sensor>
      <visual name='visual'>
        <geometry>
          <sphere>
            <radius>.005</radius>
          </sphere>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <box>
            <size>0.100000 0.100000 0.100000</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.000000</mu>
              <mu2>100000.000000</mu2>
              <slip1>0.000000</slip1>
              <slip2>0.000000</slip2>
            </ode>
          </friction>
        </surface>
        <max_contacts>10</max_contacts>
      </collision>
      <velocity_decay>
        <linear>0.000000</linear>
        <angular>0.000000</angular>
      </velocity_decay>
      <self_collide>0</self_collide>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
    </link>


    <!--Wide Angle Camera-->
    <!-- cameraL_F_H_wide gnomonical-->
    <link name='camera_wide_left_front_half'>
      <pose>0.20 0.0500000 0.3000000 0.000000 -0.000000 0.0000000</pose>
      <inertial>
        <mass>2</mass>
        <inertia>
          <ixx>1.000000</ixx>
          <ixy>0.000000</ixy>
          <ixz>0.000000</ixz>
          <iyy>1.000000</iyy>
          <iyz>0.000000</iyz>
          <izz>1.000000</izz>
        </inertia>
      </inertial>
      <sensor name='cam_wideleft_front_half' type='wideanglecamera'>
        <pose>0.200 0.0500000 0.3000000 0.000000 -0.000000 0.0000000</pose>
        <camera name='c_wideleftfronthalf'>
          <horizontal_fov>1.57</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.100000</near>
            <far>100.000000</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <lens>
            <type>gnomonical</type>
            <scale_to_hfov>true</scale_to_hfov>
            <cutoff_angle>1.5707</cutoff_angle>
            <env_texture_size>512</env_texture_size>
          </lens>
        </camera>
        <plugin name="camera_controller_wide_left_front_half" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>F1ROS/cameraL_F_H_wide</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_wide_left_front_half</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>

        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <!--    <visualize>true</visualize>
        <enable_metrics>true</enable_metrics> -->
      </sensor>
      <visual name='visual'>
        <geometry>
          <sphere>
            <radius>.005</radius>
          </sphere>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <box>
            <size>0.100000 0.100000 0.100000</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.000000</mu>
              <mu2>100000.000000</mu2>
              <slip1>0.000000</slip1>
              <slip2>0.000000</slip2>
            </ode>
          </friction>
        </surface>
        <max_contacts>10</max_contacts>
      </collision>
      <velocity_decay>
        <linear>0.000000</linear>
        <angular>0.000000</angular>
      </velocity_decay>
      <self_collide>0</self_collide>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
    </link>


    <!-- 2 Wide Angle Camera-->
    <!-- cameraL_F_H_wide stereographic-->
    <link name='camera_wideangle_left_front_test_2'>
      <pose>0.200 0.0500000 0.3000000 0.000000 -0.000000 0.0000000</pose>
      <inertial>
        <mass>2</mass>
        <inertia>
          <ixx>1.000000</ixx>
          <ixy>0.000000</ixy>
          <ixz>0.000000</ixz>
          <iyy>1.000000</iyy>
          <iyz>0.000000</iyz>
          <izz>1.000000</izz>
        </inertia>
      </inertial>
      <sensor name='cam_wideangle_left_front_half_2' type='wideanglecamera'>
        <pose>0.200 0.0500000 0.3000000 0.000000 -0.000000 0.0000000</pose>
        <camera name='c_widelfronthalf_2'>
          <horizontal_fov>2.1415</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.100000</near>
            <far>100.000000</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <lens>
            <type>stereographic</type>
            <cutoff_angle>2.1415</cutoff_angle>
            <scale_to_hfov>true</scale_to_hfov>
            <env_texture_size>512</env_texture_size>
          </lens>
        </camera>
        <plugin name="camera_controller_wide_left_front_half_2" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>F1ROS/cameraL_F_H_wide2</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_wide_left_front_half_2</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>

        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <!--    <visualize>true</visualize>
        <enable_metrics>true</enable_metrics> -->
      </sensor>

      <visual name='visual'>
        <geometry>
          <sphere>
            <radius>.005</radius>
          </sphere>
        </geometry>
      </visual>
      <collision name='collision'>
        <geometry>
          <box>
            <size>0.100000 0.100000 0.100000</size>
          </box>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>100000.000000</mu>
              <mu2>100000.000000</mu2>
              <slip1>0.000000</slip1>
              <slip2>0.000000</slip2>
            </ode>
          </friction>
        </surface>
        <max_contacts>10</max_contacts>
      </collision>
      <velocity_decay>
        <linear>0.000000</linear>
        <angular>0.000000</angular>
      </velocity_decay>
      <self_collide>0</self_collide>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
    </link>


    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>F1ROS/cmd_vel</commandTopic>
      <odometryTopic>F1ROS/odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>xf1</robotBaseFrame>
    </plugin>
  </model>
</sdf>
